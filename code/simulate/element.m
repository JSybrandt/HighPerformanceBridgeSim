function [ele, ele2, nodes, nodes2]=element(NumberElements,l,L,Multiple_Vehices)
if Multiple_Vehices==0
s = [1:(NumberElements+1)]; % global node indices
st = transpose(s); %transpose into rows
se = [1:NumberElements];
set = transpose(se);
se1 = [1:2:(NumberElements*2-1)];
set1 = transpose(se1);
se2 = [2:2:NumberElements*2];
set2 = transpose(se2);
se3 = [3:2:(NumberElements*2+1)];
set3 = transpose(se3);
se4 = [4:2:(NumberElements*2+2)];
set4 = transpose(se4);
x = [0:l:L];
xt = transpose(x);
nodes = [st,xt]; %nodal matrix
ele = [set,set1,set2,set3,set4]; %element matrix
ele2=[];
nodes2=[];
else
s = [1:(NumberElements+1)]; % global node indices
st = transpose(s); %transpose into rows
se = [1:NumberElements];
set = transpose(se);
se1 = [1:2:(NumberElements*2-1)];
set1 = transpose(se1);
se2 = [2:2:NumberElements*2];
set2 = transpose(se2);
se3 = [3:2:(NumberElements*2+1)];
set3 = transpose(se3);
se4 = [4:2:(NumberElements*2+2)];
set4 = transpose(se4);
x = [0:l:L];
xt = transpose(x);
nodes = [st,xt]; %nodal matrix
ele = [set,set1,set2,set3,set4]; %element matrix
Flip_ele=flipud(ele);
FlipLR=fliplr(Flip_ele(:,2:5));
FlipLR1=fliplr(FlipLR(:,1:2));
FlipLR2=fliplr(FlipLR(:,3:4));
ele2=[set,FlipLR1,FlipLR2];
nodes2=flipud(nodes);
end